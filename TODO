Flexbackup to-do list as of version 0.9.5

Some of these might not happen, but figured I should jot them down

Features to add:

 - arbitrary "list of files" extract
 - configurable path for programs (gtar=tar, etc)
     remote vs local too
 - support multiple tapes for a single archive
     dump already does this? afio has hooks too.
     tar does, (-M); won't work for compressed?
     would the pipeline mechanism screw it all up?
     need to test with an almost-full tape.

     found a utility called "multivol", and one from Kbackup celled
     "multibuf" that could replace buffer and handle volumes too.
     must play with them both.

 - table of contents for a tape
     ftape + vtblc has it (needs testing)
     need table of contents for others
     Scott Penrose had some ideas here...
 - interactive restore-like shell for types besides dump
     see notes below
 - Gnome driver/configurator utility
     I have a "picture" of what I want this to look like
     use glade + libglade perl bindings
     will be a seperate program that just manipulates flexbackup
 - log files for extract/compare/etc?
 - remote extract/compare/restore
     possible at all?
     just install s/w on client w/remote tape device. need config file option
 - cd-rom burning (or just .iso type?) for full backups?

Cleanup/fix:

 - resurrect my old drive and test ftape stuff again
 - check to make 100% sure dump works over the pipe mechanism
 - check that dir we are backing up exists
 - autodetect ftape and raw device to eliminate configuration
 - figure out dump length being multiple of blocksize problem
     manpage says one thing, behavior is another
 - figure out why I can't get dump -T to work
 - related problem to the above bullet.  dump updates
     /etc/dumpdates if you dump a subdir, so if you do another
     backup of a different dir of the same fs your timestamps are hosed
 - config file in just text?  Wondering if anyone is bothered by the
     perl syntax.


-------------------

Notes for cloning restore shell for afio/tar/cpio types)
Use perl readline module

1) do a listing
2) parse & put into data structures
3) mt bsf 1
4) then give a shell w/ all commands from regular dump
5) mark things for extraction
6) reopen archive & extract that list

Help from restore to jog my brain...

        ls [arg] - list directory
        cd arg - change directory
        pwd - print current directory
        add [arg] - add `arg' to list of files to be extracted
        delete [arg] - delete `arg' from list of files to be extracted
        extract - extract requested files
        setmodes - set modes of requested directories
        quit - immediately exit program
        what - list dump header information
        verbose - toggle verbose flag (useful with ``ls'')
        help or `?' - print this list
If no `arg' is supplied, the current directory is used
