$Id$
$Name$

Flexbackup to-do list
Some of these might not happen

Cleanup/fix:
 - Detect pipeline errors for remote shell = sh; use exit-code collecting
     trick to the local sh one I added

- Better cleanup after error in backup
 - Clean up more $main:: vars, split into types or refactor code
 - Whole class of problems like:
    - Use dump combined flags (for older dumps that want abc not -a -b -c)
    - Not all finds have the -fstype flag (from $traverse_fs)
    - How to handle (use lowest common denominator flags?  sorta what's tried now)
    - Explicitly say we use GNU tar...
 - When level > 9 and using files, -toc sorts it wrong (cosmetic nit)
 - When level > 9 and rm old logs/stamps, order is printed wrong (cosmetic nit)
 - Clean up usages of $_ so I don't mess something up by inserting lines
     later
 - If comp_log is changed, we don't nuke old logs that normally would be
   overwritten with ourselves if comp_log stayed the same. (cosmetic nit)
 - Try to refactor backup all/single, each fs, >1 tapes, etc.  Duplicated
     logic in some spots..
 - Split main program; use separate libs for archiver types that are stored
   in different files?  install then requires more than just program + conf file.

Misc:
 - Make a manual page (AND other enchanced documentation, more than a README)
   someone made a good start or two:
     http://myezserver.com/downloads/mitel/howto/flexbackup-howto.html
     http://www.cyber-euskadi.com/howtos/contrib/flexbackup-restore-from-disk-howto.html
     how about french?  http://sgmf.free.fr/flexbackup_doc.html
 - Someone needs to put a bunch of stuff in a faq
     Started... not much at this point
 - Try bfr? (buffer seems unmaintained; no O_LARGEFILE)
     Maybe document how to recompile buffer
     bfr looks like it will work.  will need dd too to block...
 - Document sudo workaround from Alex
 - Document John's BSD shared mem thing
 - Try against torture-test list:
     http://ftp.berlios.de/pub/star/testscripts/zwicky/testdump.doc.html

Features to add:
 - Some "level" that uses rpm, verifies all packages, and just backs
      up any file not in a package OR changed from a package. and the rpm list.
      once the above works make it work for debian packages

      Will do this post 1.0

 - Handle multi-volume backups (original idea w/ 'multibuf' never panned out)

      Found "multivol" program solution!  It also used a slightly different
      labelling, but the idea was sort of the same as mine, with small key at
      the start of the tape.

      Will do this post 1.0

      Otherwise, maybe figure out which archivers support & try to add
      won't work with pipelines probably - TEST
      use short write detection, or do we need to spec tape length?
      needs testing
       dump - depends on flavor
       afio: -s size
       cpio -M? uses short write detection for length?
       tar -M & -L?
       star tsize=
       pax -B
       zip nope
      will hose indexes - no index on second volume
      what about read/restore?

- smbtar?
     doable - overload type 'tar'. smbtar triggers with a fs spec of something like
               smb:user:pass@host/share:dir
     smbtar has "files newer than" option, test
     don't want password echoed
     no exclude from find
     top level of shares only?
 - autoconf it (esp if we pkg multivol)
 - Better way to spec fs, multiple tapes
     Maybe take out the multiple tape fs array parts if we can do mutivol?
 - Redo include/exclude paths, not just expressions?
 - Do we want to count on perl (or flexbackup for that matter) being
     installed on remote machines?  We could do some built-in replacements
     for the 'find' for instance and make things more standardized. although
     keeping it simply built out of standard commandline utils is a big plus
     as well...
 - Just to be stupid: add shar, ar, lha for read/write. [ patch ready ]
 - Just to be stupid: add arj, cab, rar reading (I don't think unix
     utils for creating those exist).
 - Make remote machine path overrides possible, that supercede others?
 - Make -extract -files for afio/cpio/zip recurse dirs
      dump/tar already to this. Actually just check that all act the same.
 - Interactive restore-like shell for types besides dump
      see notes below
 - Log tape sizes (output of buffer or dd or mt tell can be used?)
 - Extract options to not overwrite existing files
 - Arbitrary "groups" that act sort of like "all"
 - Store the index db on the tapes?
      But we don't know the size ahead of time unless hard-limited resperved size.
      Updating db at the beginning of the tape will add tape-travel overhead for every backup.
      rewind->write loses the rest of the contents past the first file?
 - CD-ROM burning (or just .iso type?) for full backups? any?
 - Encryption with gnupg?
 - Gnome driver/configurator utility
      a separate program that just manipulates flexbackup

-------------------------------------------------------------

Notes for cloning restore shell for afio/tar/cpio types)
Use perl readline module
(Maybe a seperate program or module that runs off a list fed to it)

1) do a listing
2) parse & put into data structures
3) mt bsf 1
4) then give a shell w/ all commands from regular dump
5) mark things for extraction
6) reopen archive & extract that list

Help from restore to jog my brain...

        ls [arg] - list directory
        cd arg - change directory
        pwd - print current directory
        add [arg] - add `arg' to list of files to be extracted
        delete [arg] - delete `arg' from list of files to be extracted
        extract - extract requested files
        setmodes - set modes of requested directories
        quit - immediately exit program
        what - list dump header information
        verbose - toggle verbose flag (useful with ``ls'')
        help or `?' - print this list
If no `arg' is supplied, the current directory is used


Local Variables:
mode: flyspell
end:
