$Id$
$Name$

Flexbackup to-do list
Some of these might not happen, but figured I should jot them down

Before next release:
 - test incremntal tar, move tar to regular find
 - resurrect my old drive and test ftape stuff again

 - auto-testing script for all archive types and compression
   during changes

 - update web pages (move stuff into subdirs, etc)

Features to add:
 - interactive restore-like shell for types besides dump
     see notes below
 - add "traverse mountpoints" option for non-dump types
 - support multiple tapes for a single archive
     dump already does this? afio has hooks too.
     tar does(-M). would the pipeline mechanism screw
     it all up?

     found a utility called "multivol", and one from Kbackup celled
     "multibuf" that could replace buffer and handle volumes too.
     must play with them both.

     need to test with an almost-full tape, or a floppy

 - grab /etc/mtab or /proc/mounts or "mount" and put device in Backup of: line
     (like dump does)
 - configurable path for programs (gtar=tar, etc)
     remote vs local too
 - table of contents for a tape
     ftape + vtblc has it (needs testing)
     need table of contents for others
     Scott Penrose had some ideas here...
 - Gnome driver/configurator utility
     I have a "picture" of what I want this to look like
     use glade + libglade
     will be a seperate program that just manipulates flexbackup
 - make a manual page
     embed in script, use pod2man
 - log files for extract/compare/etc?
 - extract options to not overwrite existing files
 - remote extract/compare/restore
     possible at all?
     just install s/w on client w/remote tape device. need config file
     option
 - encryption with gnupg, crypt
 - cd-rom burning (or just .iso type?) for full backups?

Cleanup/fix:
 - make -extract -files for afio/cpio/zip recurse dirs
      dump/tar already to this.
 - zip/unzip backend, use fifos rather than temp files
 - make list/extract/etc show what commands they will run
      split functions out like backup
 - cleanup erase/reten/etc.  Throw global flags based on options.
      use only -erase -reten flags
 - try restore -D for comparing subdirs w/ restore
 - check that dir we are backing up exists
 - autodetect ftape and raw device to eliminate configuration
 - config file in just text?  Wondering if anyone is bothered by the
     perl syntax.


-------------------

Notes for cloning restore shell for afio/tar/cpio types)
Use perl readline module

1) do a listing
2) parse & put into data structures
3) mt bsf 1
4) then give a shell w/ all commands from regular dump
5) mark things for extraction
6) reopen archive & extract that list

Help from restore to jog my brain...

        ls [arg] - list directory
        cd arg - change directory
        pwd - print current directory
        add [arg] - add `arg' to list of files to be extracted
        delete [arg] - delete `arg' from list of files to be extracted
        extract - extract requested files
        setmodes - set modes of requested directories
        quit - immediately exit program
        what - list dump header information
        verbose - toggle verbose flag (useful with ``ls'')
        help or `?' - print this list
If no `arg' is supplied, the current directory is used


Local Variables:
mode: flyspell
end:
