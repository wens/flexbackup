
<c>Configuration

<q>On my system, "tar" is not GNU tar but is the vendor's "tar" - GNU tar is
installed as "gtar".  On my system, "dump" is "ufsdump".

<a>Use the path overrides at the end of the config file. A couple examples
are given there, such as: <CODE>$path{'dump'} = 'ufsdump';</CODE>.  You can
use this mechanism to override paths or just change command names.

<c>Configuration

<q>I can't get my exclude expressions to work...

<a>Use regular expressions, not wild cards (aka globs).  See a perl, sed,
or grep reference, or "man 7 regex".  Simplistically, you probably mean to
say ".*" instead of "*", and ".?" instead of "?".  Also, leave OFF the
first part of a path that is the filesystem you are archiving; the exclude
expressions only match sub-paths of the backup directory. Test to see if
your expression matches what you want to exclude by:<BR><BR> <CODE>cd
&lt;topdir&gt;; find . -regex "&lt;expression&gt;"</CODE>

<c>Configuration

<q>I don't want to run backups or remote shells as root

<a>You can do this with 'sudo'.
<OL>
<LI>Set up a passphraseless ssh key for a user to run the backups.
<LI>Set <CODE>$path{command} = 'sudo command';</CODE> in the config file.
    Do this for all commands that will need privilege (find, afio/tar/etc, 
    perhaps buffer)
<LI>Set up an /etc/sudoers file with something like this:<BR><BR>
<CODE>
Cmnd_Alias BACKUP = /usr/bin/afio, /usr/bin/find<BR>
backupuser ALL = NOPASSWD: BACKUP</CODE>
</OL>

<c>Backup

<q>Can you explain numeric dump levels?

<a>Level 0 gets everything.  For 1 or higher, files that have been changed
since the last backup at a <B>lower</B> level are archived. For
instance, if a level 2 backup was done on Monday, followed by a level 4
backup on Tuesday, a subsequent level 3 backup on Wednesday would contain
all files modified or added since the level 2 (Monday) backup.

<P>See also <A
HREF="http://docs.sun.com/db/doc/805-7228/6j6q7uf18?a=view">these sun
docs</A> for an example with some pictures.

<P>Traditional Unix 'dump' behavior only allows levels 0-9; flexbackup
removes this limit if you are using any of the non-dump archive formats.

<P>For those people coming from other platforms that are not used to
dump-style numeric levels, the latest versions of flexbackup have added
<CODE>-full</CODE>, <CODE>-differential</CODE>, <CODE>-incremental</CODE>
that get translated into appropriate dump-style level numbers.
Definitions:<UL>
<LI>full: everything (duh!)
<LI>differential: only files that have been changed or added since the last 
    full backup
<LI>incremental: only the files that have changed or been added to a system
    since doing the last backup (of any type)
</UL>
<P>These are simply aliased to numeric levels: full = 0, differential = 1, and
incremental = (latest backup + 1)

<c>Backup

<q>Do you support multi-tape archives?

<a>If you split filesystems/directories in a "set" across mulitple tapes,
yes, that is supported.  As of now, having <B>one</B> directory archive
span multiple tapes is not supported.  True, some of the archiver programs
can deal with end-of media, but it is hard to generically support.  We'll
be working on a generic solution for future versions.  For now, split the
directory up into workable portions, use larger media, or backup to disk...

<c>Backup

<q>How do I archive multiple filesytems to tape at once without rewinding
in between, and without redefining "all" $filesystems in the configuration
file?

<a>Do this:<BR><BR>
<CODE>
flexbackup -fs /dir1 -norewind<BR>
flexbackup -fs /dir2 -norewind<BR>
flexbackup -fs /dir3 -norewind
</CODE>

<c>Backup

<q>I'm backing up to files on disk, and I don't want the filenames to have
timestamps in them.

<a>Set <CODE>$staticfiles</CODE> to true in the config file. Archives will
then have names such as "etc.3.dump.gz" rather than something like
"home.0.200301212305.afio-bz2". There is a similar parameter for the log
files, by the way.

<c>Common problems

<q>I get I/O errors or other errors from my tape drive.

<a>Try these one at a time:<OL>
<LI>If you are using buffering, turn it off (<CODE>$buffer='false'</CODE>) until you 
    can get things working without it.
<LI>Change the block size parameter (<CODE>$blksize</CODE>) in the 
    configuration file.  The default is 10k, but some tape drives like 32 or 64 
    much better.  
<LI>Try setting <CODE>$pad_blocks</CODE> to false
<LI>Switch the setting of <CODE>$mt_var_blocksize</CODE> to false
</OL>

<P>If you are using an IDE tape drive under Linux, and are still having
trouble, you might also try the 'ide-scsi' layer with the 'st' module, and
treating the thing like a SCSI tape - I've had more success that way.

<P>You can also just try writing/reading stuff straight from the drive
with tar and dd (to factor flexbackup out of the loop).  If you can get that
working, but flexbackup still seems to malfunction, let us know.  Try
things like: (The example below uses afio to test, others will be different)
<PRE>
  # Backup two dirs
  mt -f /dev/tape rewind
  find /dir1 -print | afio -o -z -v -b 64k - | dd ibs=64k obs=64k of=/dev/tape
  find /dir2 -print | afio -o -z -v -b 64k - | dd ibs=64k obs=64k of=/dev/tape

  # List
  mt -f /dev/tape rewind
  dd ibs=64k obs=64k if=/dev/tape | afio -t -z -v -b 64k -
  dd ibs=64k obs=64k if=/dev/tape | afio -t -z -v -b 64k -
</PRE>

<c>Common problems

<q>Backups seem to work ok, but I can't get extracting/listing to work.

<a>Usually a matter of tape positioning, or else is a tape drive parameter
problem as talked about above.  For positioning, use 'mt rewind; mt fsf
&lt;n&gt;' to get to the right file number on the tape, or use the "-num"
switch with "-list|extract|compare|restore" to have flexbackup do it for
you.  If you are using flexbackup's indexes, remember that file number 0 is
a header used for the index itself.

<c>Common problems

<q>How do I get remote backups over ssh to work without prompting for a password?

<a>If you're not using ssh, you should be. Switch to ssh and don't use
rsh. If you are using ssh and still having a problem with it asking for a
password, then your RSAAuthentication parameters are either incorrect or
you have public/private key problems. Section 7.2.2 of the ssh FAQ might
help:<BR><BR> <A
HREF="http://www.onsight.com/faq/ssh/ssh-faq.html">http://www.onsight.com/faq/ssh/ssh-faq.html</A><BR><BR>
In a nutshell the value of your <CODE>~/.ssh/identity.pub</CODE> needs to
be present in your <CODE>~/.ssh/authorized_keys</CODE> file for RSA
authentication to work. For root accounts you might also need to
put<BR><BR> <CODE>PermitRootLogin yes</CODE><BR><BR> in your sshd_config
file, as root is treated with more care than normal user accounts. Note:
you might choose without-password or forced-commands-only instead of yes
for more security. See your ssh(1) and sshd(1) man pages.

<P>If you do not want to use passphrase-less ssh keys with root logins, See
the section on use with "sudo".  (Or else sit at the terminal and type
passwords during the backups if you *really* want to...)

<c>Common problems

<q>I keep getting only one backup per tape when I do "-fs all"!

<a>Use the non-rewinding device.

<c>Common problems

<q>'buffer' complains that it can't run successfully or that it doesn't
have enough shared memory.

<a>Set <CODE>$buffer_megs</CODE> to a lower value and try again.  I usually
run with it set somewhere between 5-20MB.

<P>On FreeBSD, SysV shared memory can run low using the GENERIC kernel at
its default value (especially if you are running something like GNOME). You
can modify your kernel file and change the line<BR><BR>
<CODE>options SHMMAXPGS=2048</CODE>
<P>To something really big. You can also change this dynamically at startup by
putting<BR><BR>
<CODE>kern.ipc.shmmax={large integer}</CODE>
<P>in /etc/sysctl.conf. Other BSD's will have very similar mechanisms.

<c>Recovery

<q>How do I find out which archive(s) contain a certain file?

<a>If you don't know in which archive to find a certain file, look at the
log files.  As long as you have verbose turned on (default), you can just
'zgrep filename /var/log/flexbackup/*.gz', and that works pretty well.

<c>Recovery

<q>The disk totally died.  How do I get flexbackup's archives off the
tapes on a machine without flexbackup or even perl installed?

<a>Something like this, if using compression with tar/cpio/dump:<BR><BR>
<CODE>dd if=/dev/tapedevice bs=10k | gzip -dc | tar xvf -</CODE><BR><BR>
replace "tar xvf -" with "restore -i -f -" or whatever. Skip the gzip pipe
if you aren't using compression.  afio is a bit more complex, but read the
manpage...

<c>Recovery

<q>I don't have the index files! (disk died, different machine, etc.)

<a>This is OK, you can still extract/restore/etc. The index files are for
human convenience only.  Just skip the first file on the tape, it's a
simple "tag" text file.  The rest of the tape is your normal archives.

<c>Implementation

<q>Why keep the table of contents db on disk rather than on the tape?

<a><UL>
<LI>We don't know the table size ahead of time unless we use a hard-limited 
    reserved size.
<LI>Updating the db at the beginning of the tape will add tape-travel overhead 
    for every backup.
<LI>a backup->rewind->write start of tape sequence will lose the rest of the 
    contents past the first file unless we start to play filemark tricks.
</UL>

<c>Implementation

<q>This index stuff is a useless mess/I can't get it to work!

<a>It isn't necessary if you don't like it. Set <CODE>$indexes =
'false';</CODE> in the config file, and just use written labels on the
tapes...

