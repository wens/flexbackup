   _____ _           _                _
  |  ___| | _____  _| |__   __ _  ___| | ___   _ _ __
  | |_  | |/ _ \ \/ / '_ \ / _` |/ __| |/ / | | | '_ \
  |  _| | |  __/>  <| |_) | (_| | (__|   <| |_| | |_) |
  |_|   |_|\___/_/\_\_.__/ \__,_|\___|_|\_\\__,_| .__/
                                                |_|
 http://members.home.com/edwinh/flexbackup/
 README for version 0.9.4a2

----------------------------------------------------------------------
Flexible backup script.

Features:
   o Easy to configure
   o Uses dump, afio, tar, or cpio with the flick of a switch
   o Backup, extract, compare, list modes
   o Full (0) and 1-9 levels of incremental backup (ala "dump")
   o Filesystem-oriented (won't traverse devices)
   o Does remote filesystems (over rsh/ssh; no special service)
   o Works with IDE/SCSI tapes
     or Linux ftape (allows table of contents support)
     or archive to normal files rather than device
   o Nice log files

Software needed:
   o perl, gzip
   o mt (or ftmt if using ftape)
   o one or more of
       dump/restore afio tar cpio
   o possibly ftape and ftape-tools

Install:
   o Copy flexbackup.conf to /etc
   o Copy the flexbackup program to someplace in your PATH
     You only need to do this on the machine with the tape drive -
     remote machines don't need anything installed
   o Edit /etc/flexbackup.conf as desired. See the comments

I looked at many other packages and didn't really find anything that
worked the way I wanted it to.  For my needs I felt the existing
packages were any combination of:
   o Too complex to setup/use
   o Lacked documentation
   o Nonstandard archiving formats
   o Overkill for a small network of 2 or 3 machines
   o Too simplistic, or hard-coded assumptions
   o No scripts helped drive "dump/restore"
   o Didn't have features I wanted

----------------------------------------------------------------------
USE

See "flexbackup -help". Examples below.

To do a full backup of /home:

   flexbackup -fs /home

For nightly incremental backups, run this via cron:

   flexbackup -fs all -level 9

To do a full backup of /usr from machine "otherhost", forcing cpio type:

   flexbackup -fs otherhost:/usr -type cpio

To do an level 5 incremental backup of all filesystems:

   flexbackup -fs all -level 5

Extract all files from current tape position into current directory:

   flexbackup -extract

Compare afio archive at current tape position with the current
directory:

   flexbackup -compare -type afio

----------------------------------------------------------------------
NOTES

 Level 0 backups of "all" assume a new tape - will trigger
 tape retension and erasure.  Other backups move tape to
 current end of data and start the backup there

 Backups rewind the tape when done.  Other operations leave it where
 it is.

 Log files are of the format <prefix><fs>.<level>.<yyyymmdd>
 Lower-level backups will wipe out all higher-level log files in
 the log directory for that filesystem.

 Archiving to files - just set $device to a directory. Backups
 will be called <filesystem>.<level>.<yyyymmdd>.<type>

 You can give filenames as an argument to -compare/extract/list/restore

 Remote: rsh or ssh is used for remote backups.  Backups of remote machines
 are to be run from the machine with the tape drive!

 I suggest using either the "dump" or "afio" types.  Dump would be perfect
 if it did compression and could exclude file patterns, but it isn't
 designed that way... afio is a good bet if you want compression.  One bit
 error will not corrupt your entire archive like with a compressed tar
 scheme.

----------------------------------------------------------------------
MISC

 I did this to to help automate my life.
 See the TODO list for what I might be planning to do next

 Comments/problems/suggestions to edwinh@computer.org

 Thanks,
   Edwin Huffstutler <edwinh@computer.org>


 DISCLAIMER: This program is distributed in the hope that it will be
 useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
 Public License (See COPYING) for more details.
